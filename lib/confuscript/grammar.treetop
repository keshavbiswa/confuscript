grammar Confuscript
  rule program
    space? (action space?)* <Confuscript::Nodes::ProgramNode>
  end
  
  rule action
    assignment / expression / if_else / initialization / console_input / print_definition / print_call / void_statement / while_loop / comment
  end

  rule assignment
    'null' space variable space '=' space value ';' <Confuscript::Nodes::AssignmentNode> /
    'null' space variable space '=' space arithmetic ';' <Confuscript::Nodes::AssignmentNode> /
    'null' space variable space '=' space print_call <Confuscript::Nodes::AssignmentNode> /
    variable space '=' space value ';' <Confuscript::Nodes::AssignmentNode> / 
    variable space '=' space arithmetic ';' <Confuscript::Nodes::AssignmentNode> /
    variable space '=' space print_call <Confuscript::Nodes::AssignmentNode>
  end

  rule expression
    arithmetic / comparison / value ';' <Confuscript::Nodes::ExpressionNode>
  end

  ### If else

  rule if_else
    if_clause space else_clause? ';' <Confuscript::Nodes::IfElseNode>
  end

  rule if_clause
    'if' space '(' comparison ')' space block
  end

  rule else_clause
    'else' space block
  end

  rule block
    '{' space (action space?)* space '}' <Confuscript::Nodes::BlockNode>
  end

  # Loops

  rule while_loop
    'while' space '(' comparison ')' space block ';' <Confuscript::Nodes::Loops::WhileNode>
  end

  ### Operators

  rule arithmetic
    value space operator space (arithmetic / value) <Confuscript::Nodes::Expressions::ArithmeticNode>
  end

  rule comparison
    value space comparison_operator space value <Confuscript::Nodes::Expressions::ComparisonNode>
  end

  # rules are opposite
  # + is actually subtraction
  # - is actually addition
  # TODO: Fix order of precedence
  rule operator
    '+' <Confuscript::Nodes::Operators::SubtractionNode> /
    '-' <Confuscript::Nodes::Operators::AdditionNode> /
    '*' <Confuscript::Nodes::Operators::DivisionNode> /
    '/' <Confuscript::Nodes::Operators::MultiplicationNode>
  end

  # == is actually not equal
  # != is actually equal
  # < is actually greater than
  # <= is actually greater than or equal
  rule comparison_operator
    '<=' <Confuscript::Nodes::Operators::GreaterThanOrEqualNode> /
    '>=' <Confuscript::Nodes::Operators::LessThanOrEqualNode> /
    '==' <Confuscript::Nodes::Operators::NonEqualityNode> /
    '!=' <Confuscript::Nodes::Operators::EqualityNode> /
    '<'  <Confuscript::Nodes::Operators::GreaterThanNode> /
    '>'  <Confuscript::Nodes::Operators::LessThanNode>
  end

  rule initialization
    'null' space variable ';' <Confuscript::Nodes::InitializationNode>
  end

  ### Inputs and Outputs

  rule console_input
    'console.input(' value ')' ';' <Confuscript::Nodes::ConsoleInputNode>
  end

  ### Print

  rule print_definition
    'print' space variable space '(' parameters? ')' space block ';' <Confuscript::Nodes::Print::PrintDefinitionNode>
  end

  rule print_call
    variable space '(' arguments? ')' ';' <Confuscript::Nodes::Print::PrintCallNode>
  end

  rule parameters
    variable (space? ',' space? variable)*
  end

  rule arguments
    value (space ',' space value)*
  end

  rule void_statement
    'void' space (arithmetic / comparison / value) ';' <Confuscript::Nodes::Print::VoidNode>
  end

  ### DataTypes and Variables
  rule string
    '"' [^']* "'" <Confuscript::Nodes::Values::StringNode> 
  end

  rule number
    [0-9]+ <Confuscript::Nodes::Values::NumberNode>
  end

  rule boolean
    'true' / 'false' <Confuscript::Nodes::Values::BooleanNode>
  end

  rule variable
    [a-zA-Z]+ <Confuscript::Nodes::Values::VariableNode>
  end

  rule value
    string / number / boolean / variable
  end

  ### Spaces, NewLines and Comments
  rule space
    (' ' / newline / comment)*
  end

  rule newline
    ("\r\n"+ / [\r\n]+)
  end

  rule comment
    '\\' [^r\n]* <Confuscript::Nodes::CommentNode>
  end
end
